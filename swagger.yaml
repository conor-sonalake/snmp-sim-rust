openapi: 3.0.0
info:
  license:
    name: BSD License
  version: '0.1.0'
  title: 'SNMP Simulator Management REST API'
  description: >
    Management API is designed to support complete SNMP Simulator work flow
    remotely.

servers:
  - url: http://127.0.0.1:5000/snmpsim/mgmt/v1

paths:
  /agents:
    description: >
      This resource represents a list of all SNMP agents.
    get:
      tags:
      - SNMP Agent
      summary: >
        List all existing SNMP agents
      parameters:
        - name: name
          in: query
          description: >
            Search agents by name
          required: false
          schema:
            type: string
        - name: data_dir
          in: query
          description: >
            Search agents by data directory
          required: false
          schema:
            type: string
      responses:
        "200":
          description: >
            An array of SNMP agents
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agents"
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      tags:
      - SNMP Agent
      summary: Create a new SNMP agent
      requestBody:
        description: >
          New SNMP agent object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentRequired"
      responses:
        "201":
          description: Null response
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

    put:
      tags:
      - SNMP Agent
      summary: Update an existing SNMP agent
      requestBody:
        description: >
          Update SNMP agent object
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AgentRequired"
      responses:
        "201":
          description: Null response
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /agents/{id}:
    description: >
      This resource represents a single SNMP agent identified
      by `id`.
    get:
      tags:
      - SNMP Agent
      summary: Details of a specific SNMP agent
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the agent to retrieve
          schema:
            type: integer
      responses:
        "200":
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Agent"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
      - SNMP Agent
      summary: Delete SNMP agent
      parameters:
        - name: id
          in: path
          required: true
          description: The ID of the SNMP Agent to delete
          schema:
            type: integer
      responses:
        "201":
          description: Null response
        default:
          description: Unspecified error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  schemas:
    AgentRequired:
      description: >
        Required fields of SNMP agent object.
      type: object

    Agent:
      description: >
        Represents SNMP agent. Consists of Managed SNMP Device and transport
        endpoints it binds.
      type: object
      allOf:
        - $ref: "#/components/schemas/AgentRequired"

    Agents:
      type: array
      items:
        $ref: "#/components/schemas/Agent"


    Error:
      type: object
      required:
        - status
        - message
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
